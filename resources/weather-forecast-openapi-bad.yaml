---
openapi: 3.0.2
info:
  title: WeatherForecast API
  version: 1.0.0
  description: A simple API for demonstrating dispatching capabilities in Microcks
  contact:
    name: Laurent Broudoux
    url: https://github.com/lbroudoux
    email: laurent.broudoux@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  x-microcks:
    labels:
      domain: weather-forecast
      status: GA
      team: 
        id: A
        name: Team A
paths:
  /forecast/{region}:
    get:
      operationId: GetForecast
      summary: Get forecast for region
      description: Get forecast for region
      tags:
        - forecast
      x-microcks-operation:
        delay: short
      parameters:
        - name: region
          description: The region to get forecast for
          schema:
            type: string
          in: path
          required: true
          examples:
            #unknown:
            #  value: other
            north:
              value: north
            west:
              value: west
            east:
              value: east
            south:
              value: south
        - name: apiKey
          description: Client API key
          schema:
            type: string
          in: query
          required: true
      responses:
        "200":
          description: Weather forecast for region
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    type: string
                  temp:
                    format: double
                    type: number
                  weather:
                    type: string
                  visibility:
                    format: int32
                    type: integer
              examples:
                north:
                  value:
                    region: north
                    temp: -1.5
                    weather: snowy
                    visibility: 25
                west:
                  value:
                    region: west
                    temp: 12.2
                    weather: rainy
                    visibility: 300
                east:
                  value:
                    region: east
                    temp: -6.6
                    weather: frosty
                    visibility: 523
                south:
                  value:
                    region: south
                    temp: "28.3"
                    weather: sunny
                    visibility: 1500
        "404":
          description: Region is unknown
          content:
            application/json:
              schema:
                type: string
              examples:
                unknown:
                  value: "Region is unknown. Choose in north, west, east or south."
    put:
      operationId: SetForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forecast'
            examples:
              north:
                value:
                  region: north
                  temp: 3.0
                  weather: cloudy
                  visibility: 200
      responses:
        "200":
          description: Forecast is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forecast'
    delete:
      operationId: DeleteForecast
      tags:
        - forecast
      parameters:
        - name: region
          description: The region to get forecast for
          schema:
            type: string
          in: path
          required: true
          examples:
            center:
              value: center
      responses:
        "204":
          description: Forecast is deleted
          x-microcks-refs:
            - center-south

tags:
  - name: forecast
    description: Foreacast related operation

components:
  schemas:
    Forecast:
      type: object
      properties:
        region:
          type: string
        temp:
          format: double
          type: number
        weather:
          type: string
        visibility:
          format: int32
          type: integer