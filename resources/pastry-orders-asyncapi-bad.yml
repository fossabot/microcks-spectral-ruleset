asyncapi: '2.6.0'
id: 'urn:io.microcks.example.pastry-orders'
info:
  title: Pastry orders API
  version: 0.1.0
  description: Sample AsyncAPI for Pastry order events
  x-microcks:
    foo: bar
    labels:
      domain: weather-forecast
      status: GA
      team: Team A
defaultContentType: application/json
channels:
  pastry/orders:
    description: The topic on which pastry orders events may be consumed
    subscribe:
      summary: Receive informations about pastry orders
      operationId: receivedPastryOrder
      message:
        $ref: '#/components/messages/PastryOrder'
  pastry/orders/{orderId}:
    description: The topic of which pastry orders update events may be pushed
    parameters:
      orderId:
        description: Unique identifier of order (guid)
        schema:
          type: string
          examples:
            Order deletion:
              value: aa5aa8d3-c09b-4b8a-ab3e-d7fd1580b758
    publish:
      summary: Send informations on a pastry order update
      operationId: sendPastryOrderUpdate
      message:
        $ref: '#/components/messages/PastryOrderUpdate'
  pastry/health:
    description: The health check channel
    subscribe:
      summary: Receive health information on pastry events
      operationUd: receivedPastryHealth
      message:
        payload:
          type: string
      x-microcks-operation:
        frequency: '10'
components:
  messages:
    PastryOrder:
      payload:
        type: object
        additionalProperties: false
        required:
          - id
          - customerId
          - status
          - productQuantities
        properties:
          id:
            description: Unique identifier of order (guid)
            type: string
          customerId:
            description: Identifier of customer of this order (guid)
            type: string
          status:
            description: Status of Order
            enum:
              - CREATED
              - VALIDATED
              - CANCELED
              - FAILED
            type: string
          productQuantities:
            description: Desired products and quantities for this order
            type: array
            items:
              $ref: '#/components/schemas/ProductQuantity'
      examples:
        - name: Validated order
          payload:
            id: 4dab240d-7847-4e25-8ef3-1530687650c8
            customerId: fe1088b3-9f30-4dc1-a93d-7b74f0a072b9
            status: VALIDATED
            productQuantities:
              - quantity: 2
                pastryName: Croissant
              - quantity: 1
                pastryName: Millefeuille
        - name: Unknown order
          payload:
            id: 0e57b087-ebec-4801-89e9-6572dabbf541
            customerId: 4167b4e3-7d99-4787-9f64-7720428e7099
            status: UNKNOWN
            productQuantities:
              - quantity: '1'
                pastryName: Apple Pie
    PastryOrderUpdate:
      payload:
        type: object
        additionalProperties: false
        required:
          - timestamp
          - oldStatus
          - newStatus
        properties:
          timestamp:
            description: Update timestamp
            type: string
          oldStatus:
            description: Status of Order
            enum:
              - CREATED
              - VALIDATED
              - CANCELED
              - FAILED
            type: string
          newStatus:
            description: Status of Order
            enum:
              - VALIDATED
              - CANCELED
              - FAILED
            type: string
      examples:
        - name: Order validation
          payload:
            timestamp: '123456789'
            oldStatus: CREATED
            newStatus: VALIDATED
  schemas:
    ProductQuantity:
      type: object
      additionalProperties: false
      required:
        - quantity
        - pastryName
      properties:
        quantity:
          description: Desired quantity
          type: integer
        pastryName:
          description: Desired pastry name
          type: string
